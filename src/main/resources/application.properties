
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.PostgreSQLDialect
# Tells Hibernate to verify schema but not create
spring.jpa.hibernate.ddl-auto=validate
spring.jpa.hibernate.show-sql=true

# Updates our API basepath to be {HOST}/api instead of {HOST}/
server.servlet.context-path=/api

# Turning this off since we will be manually applying our db updates
# spring.sql.init.mode=always

spring.datasource.url=jdbc:postgresql://db:5432/${POSTGRES_DB}
spring.datasource.username=postgres
spring.datasource.password=${POSTGRES_PASSWORD}
spring.datasource.schema=classpath:/schema.sql
spring.datasource.continue-on-error=true

# Security Configuration
cors.allowedMethods=GET,POST,OPTIONS,PUT,DELETE
cors.allowedHeaders=Content-Type,Accept,Origin,Access-Control-Request-Method,Access-Control-Request-Headers
cors.exposedHeaders=Access-Control-Allow-Origin,Access-Control-Allow-Credentials
cors.allowedOriginPatterns=http://localhost:*