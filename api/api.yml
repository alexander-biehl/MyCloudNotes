openapi: 3.0.2
info:
  title: Swagger MyCloudNotes - OpenAPI 3.0

  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
  version: 1.0.11
servers:
  - url: https://todo.com/api
paths:
  /notes:
    get:
      summary: Get Notes
      description: gets the list of all notes
      # parameters: TODO
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Note"
    post:
      summary: Create a new note
      description: creates a new note
      requestBody:
        description: Create a new Note
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Note"
      responses:
        "201":
          description: created
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Note"
        "200":
          description: updated
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Note"
  /notes/{noteId}:
    get:
      summary: find note by ID.
      description: Returns a Note.
      operationId: getNoteById
      parameters:
        - name: noteId
          in: path
          description: Id of the note to return
          required: true
          schema:
            type: string
            format: uuid
      responses:
        "200":
          description: success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Note"
        "400":
          description: invalid Id
        "403":
          description: Unauthorized
          # content:
          #   application/json:
          #     schema:
          #       $ref: "#/components/schemas/Error"
        "404":
          description: no note found for Id
    put:
      summary: update note
      description: update note
      operationId: updateNoteById
      parameters:
        - name: noteId
          in: path
          required: true
          schema:
            type: string
            format: uuid
      requestBody:
        description: update or create note
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Note"
      responses:
        "200":
          description: updated
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Note"
        "201":
          description: created
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Note"
        "400":
          description: invalid Id
        "422":
          description: invalid content
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
    delete:
      summary: Delete Note by ID
      description: Delete Note
      parameters:
        - name: noteId
          in: path
          required: true
          schema:
            type: string
            format: uuid
      responses:
        "200":
          description: success
        "404":
          description: Note not found

components:
  schemas:
    Note:
      type: object
      properties:
        id:
          type: string
          format: uuid
          example: 689b20ce-3939-4fe1-b4f9-10e390d6735a
        content:
          type: string
          example: Make sure to get the groceries.
    ApiResponse:
      type: object
      properties:
        code:
          type: integer
          format: int32
        message:
          type: string
    Error:
      type: object
      properties:
        code:
          type: integer
          format: int32
        message:
          type: string

  requestBodies:
    Note:
      description: note object
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/Note"

  # TODO securitySchemes:
